/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 * D&D Battle Manager API
 * Type-safe API for D&D 5e battle management
 * OpenAPI spec version: 1.0.0
 */
import type {
  PostApiDiceRoll200,
  PostApiDiceRoll400,
  PostApiDiceRollBody
} from '../generated.schemas';

import { customFetch } from '.././fetcher';

/**
 * Roll dice using standard notation (e.g., 2d6+3)
 * @summary Roll dice
 */
export type postApiDiceRollResponse200 = {
  data: PostApiDiceRoll200
  status: 200
}

export type postApiDiceRollResponse400 = {
  data: PostApiDiceRoll400
  status: 400
}
    
export type postApiDiceRollResponseSuccess = (postApiDiceRollResponse200) & {
  headers: Headers;
};
export type postApiDiceRollResponseError = (postApiDiceRollResponse400) & {
  headers: Headers;
};

export type postApiDiceRollResponse = (postApiDiceRollResponseSuccess | postApiDiceRollResponseError)

export const getPostApiDiceRollUrl = () => {


  

  return `http://localhost:8000/api/dice/roll`
}

export const postApiDiceRoll = async (postApiDiceRollBody: PostApiDiceRollBody, options?: RequestInit): Promise<postApiDiceRollResponse> => {
  
  return customFetch<postApiDiceRollResponse>(getPostApiDiceRollUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      postApiDiceRollBody,)
  }
);}


